import { test, expect } from "../baseFixtures.js";
import logData from "../../cypress/fixtures/log.json";
import logsdata from "../../../test-data/logs_data.json";
import { login } from "../utils/dashLogin.js";
import { ingestion, removeUTFCharacters } from "../utils/dashIngestion.js";
import {
  waitForDashboardPage,
  applyQueryButton,
  deleteDashboard,
} from "../utils/dashCreation.js";

const randomDashboardName =
  "Dashboard_" + Math.random().toString(36).substr(2, 9);

test.describe.configure({ mode: "parallel" });

test.describe("dashboard filter testcases", () => {
  test.beforeEach(async ({ page }) => {
    console.log("running before each");
    await login(page);
    await page.waitForTimeout(1000);
    await ingestion(page);
    await page.waitForTimeout(2000);

    const orgNavigation = page.goto(
      `${logData.logsUrl}?org_identifier=${process.env["ORGNAME"]}`
    );
    await orgNavigation;
  });

   test("should verify that the transpose toggle button is working correctly", async ({
      page,
     
    }) => {
      // Navigate to dashboards
      await page.locator('[data-test="menu-link-\\/dashboards-item"]').click();
      await waitForDashboardPage(page);
  
      // Create a new dashboard
      await page.locator('[data-test="dashboard-add"]').click();
      await page.locator('[data-test="add-dashboard-name"]').click();
      await page
        .locator('[data-test="add-dashboard-name"]')
        .fill(randomDashboardName);
      await page.locator('[data-test="dashboard-add-submit"]').click();
  
      // Add panel to the dashboard
      await page
        .locator('[data-test="dashboard-if-no-panel-add-panel-btn"]')
        .click();
      await page
        .locator("label")
        .filter({ hasText: "Streamarrow_drop_down" })
        .locator("i")
        .click();
      await page.getByRole("option", { name: "e2e_automate" }).click();
  
      await page
        .locator(
          '[data-test="field-list-item-logs-e2e_automate-kubernetes_container_name"] [data-test="dashboard-add-y-data"]'
        )

    });
  });